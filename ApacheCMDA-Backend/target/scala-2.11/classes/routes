# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page - we use the @controllers syntax here so that the router knows we are referring to a class. In turn it
# will call on the GlobalSettings.getController method to resolve the actual controller instance.
# GET     /                           @controllers.Application.index

# Testing page
#GET           /                       @controllers.PostController.index()

# Climate Service
GET           /climateService/getClimateService/:name/json                                              @controllers.ClimateServiceController.getClimateService(name: String, format: String="json")
GET           /climateService/getClimateService/id/:id                                                  @controllers.ClimateServiceController.getClimateServiceById(id: Long)
GET           /climateService/getAllClimateServices/json                                                @controllers.ClimateServiceController.getAllClimateServices(format: String="json")
GET           /climateService/getAllMostRecentClimateServicesByCreateTime/json                          @controllers.ClimateServiceController.getAllClimateServicesOrderByCreateTime(format: String="json")
GET           /climateService/getAllMostRecentClimateServicesByLatestAccessTime/json                    @controllers.ClimateServiceController.getAllClimateServicesOrderByLatestAccessTime(format: String="json")
GET           /climateService/getAllMostUsedClimateServices/json                                        @controllers.ClimateServiceController.getAllClimateServicesOrderByCount(format: String="json")
POST          /climateService/addClimateService                                                         @controllers.ClimateServiceController.addClimateService
GET           /climateService/getAllServiceEntries/json                                                 @controllers.ClimateServiceController.getAllServiceEntries(format: String="json")
POST          /climateService/addServiceEntry                                                           @controllers.ClimateServiceController.addServiceEntry
PUT           /climateService/updateClimateService/id/:id                                               @controllers.ClimateServiceController.updateClimateServiceById(id: Long)
PUT           /climateService/updateClimateService/name/:oldName                                        @controllers.ClimateServiceController.updateClimateServiceByName(oldName: String)
DELETE        /climateService/deleteClimateService/id/:id                                               @controllers.ClimateServiceController.deleteClimateServiceById(id: Long)
DELETE        /climateService/deleteClimateService/name/:name                                           @controllers.ClimateServiceController.deleteClimateServiceByName(name: String)

# Instrument
GET           /instrument/getAllInstruments/json                                                        @controllers.InstrumentController.getAllInstruments(format: String="json")
GET           /instrument/getInstrument/id/:id/json                                                     @controllers.InstrumentController.getInstrument(id: Long, format: String="json")
POST          /instrument/addInstrument                                                                 @controllers.InstrumentController.addInstrument
PUT           /instrument/updateInstrument/id/:id                                                       @controllers.InstrumentController.updateInstrumentById(id: Long)
DELETE        /instrument/deleteInstrument/id/:id                                                       @controllers.InstrumentController.deleteInstrument(id: Long)

# Dataset
GET           /dataset/getAllDatasets/json                                                              @controllers.DatasetController.getAllDatasets(format: String="json")
GET           /dataset/getDataset/id/:id/json                                                           @controllers.DatasetController.getDataset(id: Long, format: String="json")
POST          /dataset/addDataset                                                                       @controllers.DatasetController.addDataset
PUT           /dataset/updateDataset/id/:id                                                             @controllers.DatasetController.updateDatasetById(id: Long)
DELETE        /dataset/deleteDataset/id/:id                                                             @controllers.DatasetController.deleteDataset(id: Long)
POST		  /dataset/queryDataset																		@controllers.DatasetController.queryDatasets

# Parameter
GET           /parameter/getAllParameters/json                                                          @controllers.ParameterController.getAllParameters(format: String="json")
GET           /parameter/getParameter/service/:id/name/:name/json                                       @controllers.ParameterController.getParameterByName(id:Long, name: String, format: String="json")
GET           /parameter/getParameter/id/:id/json                                                       @controllers.ParameterController.getParameterById(id: Long, format: String="json")
POST          /parameter/addParameter                                                                   @controllers.ParameterController.addParameter
PUT           /parameter/updateParameter/id/:id                                                         @controllers.ParameterController.updateParameterById(id: Long)
PUT           /parameter/updateParameter/name/:oldName                                                  @controllers.ParameterController.updateParameterByName(oldName: String)
DELETE        /parameter/deleteParameter/service/:id/name/:name                                         @controllers.ParameterController.deleteParameterByName(id:Long, name: String)

# Users
GET           /users/:id                                                                                @controllers.UserController.getUser(id: Long, format: String="json")
POST          /users/add                                                                                @controllers.UserController.addUser
PUT           /users/update/:id                                                                         @controllers.UserController.updateUser(id: Long)
DELETE        /users/delete/:id                                                                         @controllers.UserController.deleteUser(id: Long)
GET			  /users/getAllUsers/json																	@controllers.UserController.getAllUsers(format: String="json")
POST		  /users/isUserValid																		@controllers.UserController.isUserValid
DELETE		  /users/delete/userName/:userName/password/:password										@controllers.UserController.deleteUserByUserNameandPassword(userName: String, password: String)

GET           /users/new/test                                                                           @controllers.UserController.newUser()
POST          /users/add/test                                                                           @controllers.UserController.addUserForTest()

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                                             controllers.Assets.at(path="/public", file)

# Post
GET           /onepost/:id                                                                              @controllers.PostController.getPost(id: Long, format: String="json")
GET           /post/user/:id                                                                            @controllers.PostController.getAllPostsByUserId(id: Long, format: String="json")
GET           /post/new                                                                                 @controllers.PostController.newPost()
POST          /post                                                                                     @controllers.PostController.addPost()
POST          /post/like                                                                                @controllers.PostController.likeToPost()
GET           /post/delete/:id                                                                          @controllers.PostController.deletePostByPostId(id: Long)
POST          /post/edit                                                                                @controllers.PostController.editPostByPostId()
GET           /post/popular                                                                             @controllers.PostController.getTopTenPostsByPopularity(format: String="json")
GET           /post/delete/user/:id                                                                     @controllers.PostController.deleteAllPostsByUserId(id: Long)
GET           /post/follow/:id                                                                          @controllers.PostController.findFolloweePostsByUserIdOrderByTime(id: Long, String="json")

# Share
GET           /share/new                                                                                @controllers.ShareController.newShare()
POST          /share                                                                                    @controllers.ShareController.addSharePost()
GET           /share/user/:id                                                                           @controllers.ShareController.getSharedPostsByUserId(id: Long, format: String="json")
GET           /share/delete/:postId                                                                     @controllers.ShareController.deleteShareByPostId(postId: Long)
GET           /share/deleteAll                                                                          @controllers.ShareController.deleteAllShares()

# Follow
GET           /follow/new                                                                               @controllers.FollowController.newFollow()
POST          /follow                                                                                   @controllers.FollowController.addFollow()
GET           /follow/user/:id                                                                          @controllers.FollowController.getFollowersByUserId(id: Long, format: String="json")
GET           /follow/all                                                                               @controllers.FollowController.getAllFollow()
GET           /follow/delete/:followId                                                                  @controllers.FollowController.deleteFollowById(followId: Long)

# Comment
POST          /comment                                                                                  @controllers.CommentController.addComment()
GET           /comment/post/:id                                                                        @controllers.CommentController.getAllCommentsByPostIdOrderByTimeAsc(id: Long, format: String="json")

# Search
POST          /search/user/criteria                                                                     @controllers.SearchController.searchUsingCriteria()
GET           /search/user/fuzzy/:partial                                                               @controllers.SearchController.searchUserFuzzy(partial: String, format: String="json")
GET           /search/post/:keyword                                                                     @controllers.SearchController.searchPostContentByKeyword(keyword: String, format: String="json")

# Auto completion
GET           /user/autocomplete/firstname/:query                                                        @controllers.UserController.autoCompFirstName(query: String)
GET           /user/autocomplete/lastname/:query                                                       @controllers.UserController.autoCompLastName(query: String)
GET           /user/autocomplete/email/:query                                                           @controllers.UserController.autoCompEmail(query: String)
POST          /user/autocomplete/exact                                                                  @controllers.UserController.autoCompExact()
